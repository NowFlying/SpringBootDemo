server:
  port: 8088
spring:
  application:
    name: practice
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/mytest?useUnicode=true&characterEncoding=UTF8&useSSL=false&serverTimezone=UTC
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
    ##连接池配置
    initial-size: 5 # 初始化连接大小
    min-idle: 5     # 允许最小空闲连接数，空闲连接超时踢除过程会最少保留的连接数
    max-active: 10  # 允许的最大同时使用中(在被业务线程持有，还没有归还给druid) 的连接数
    max-wait: 60000 # 从连接池获取连接的最大等待时间，单位是毫秒
    time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位是毫秒
    validation-query: select 1 from dual # 用来检测连接是否有效的sql,如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
    test-while-idle: true # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
    test-on-borrow: true # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    test-on-return: false # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    pool-prepared-statements: false # oracle配置为true，mysql可以配置为false，分库分表较多的数据库，建议配置为false
    max-pool-prepared-statement-per-connection-size: 20 # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    filters: stat
  redis:
    host: localhost
    port: 6379
  cache:
    type: redis

mybatis:
  typeAliasesPackage: com.ggf.testdemo.entity
  mapperLocations: classpath:mapper/*.xml
logging:
  level:
    com.ggf.testdemo.dao: debug